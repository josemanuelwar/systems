/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trasporte;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josemanuel
 */
public class Ver_Reportes extends javax.swing.JFrame {

    /**
     * Creates new form Ver_Reportes
     *
     */
    
    /* variables que utiliso para la conexion a la base de datos y de la tabla */
    JTable tabla;
   ConectarBd conex= new ConectarBd();
    Connection  conectar = conex.conexion();
     JScrollPane scrolpanel = new JScrollPane(tabla);
    
    public Ver_Reportes() {
        initComponents();
        /*Metodos que utiliso para mostrar la informacion des de el inicio 
        de la aplicasion son los que llena la tabla*/
        Octener_datos();
        OctenerRFC();
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 500));
        setMinimumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(null);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                jScrollPane1AncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "RFC", "Cliente", "Origen", "Destino"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 120, 420, 130);

        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(130, 40, 141, 30);

        jButton1.setText("Filtrar por Nombre");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(309, 43, 170, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setText("Ver registros almasenados ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 10, 190, 20);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 51));
        jLabel2.setText("Nombre");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 50, 67, 19);

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(60, 290, 70, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/slide_3.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 640, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*Flitramos los fletes por nombre del cliente */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nombre =(String) jComboBox1.getSelectedItem();
         
        String sql = "SELECT RFC, Nombre, origen, destino "
                + "FROM cliente INNER JOIN fletes ON cliente.RFC = fletes.id_RFC AND cliente.Nombre = '"+nombre+"'";
        DefaultTableModel dnf = new DefaultTableModel();
        tabla = this.jTable1;
        tabla.setModel(dnf);
        dnf.setColumnIdentifiers(new Object[]{"RFC","Nombre/Asociasion","Origen","Destino"});
        
        try {
                        
            Statement octenerfc = conectar.createStatement();
            ResultSet resutado = octenerfc.executeQuery(sql);
            
            while (resutado.next()) {
                    
                
                  dnf.addRow(new Object[]{resutado.getString("RFC"),resutado.getString("Nombre"),resutado.getString("origen"),resutado.getString("destino")});
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Ver_Reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    /*cierra la ventana que esta viendo y regrasamos a la anterior cierra la base de datos*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            conectar.close();
        } catch (SQLException ex) {
            Logger.getLogger(Ver_Reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jScrollPane1AncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jScrollPane1AncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1AncestorMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ver_Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ver_Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ver_Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ver_Reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ver_Reportes().setVisible(true);
            }
        });
    }
    /*Metodo para octener todos los datos de la tabla
    fletes y los muestra en la tabla*/
    public  void Octener_datos(){
        
        String sql = "SELECT RFC, Nombre, origen, destino FROM cliente INNER JOIN fletes ON cliente.RFC = fletes.id_RFC";

        DefaultTableModel dnf = new DefaultTableModel();
        tabla = this.jTable1;
        tabla.setModel(dnf);
        
        dnf.setColumnIdentifiers(new Object[]{"RFC","Nombre/Asociasion","Origen","Destino"});
        
        try {
                        
            Statement octenerfc = conectar.createStatement();
            ResultSet resutado = octenerfc.executeQuery(sql);
            
            while (resutado.next()) {
                    
                
                  dnf.addRow(new Object[]{resutado.getString("RFC"),resutado.getString("Nombre"),resutado.getString("origen"),resutado.getString("destino")});
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Ver_Reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /*Metodo para octener los Rfc de los clientes y los Nombres de los 
    clientes*/
    
      public void OctenerRFC(){
    
           String sql="Select *from cliente";
        
        try {
            Statement octenerfc = conectar.createStatement();
               ResultSet resutado = octenerfc.executeQuery(sql);
               while (resutado.next()){
                   
                   jComboBox1.addItem(resutado.getString("Nombre"));
               }
             
             
        } catch (SQLException ex) {
            Logger.getLogger(ConectarBd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
